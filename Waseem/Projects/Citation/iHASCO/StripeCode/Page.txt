<apex:page cache="false" sidebar="false" showHeader="false" controller="StripeCalloutService" action="{!validateStripePayementDetails}">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <title>Card payment</title>
        <!-- BootStrap Style -->
        <apex:stylesheet value="{!URLFOR($Resource.StripeStyles, 'bootstrap_v.4.css')}"/>
        <!-- BootStrap Icons -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" />
        <!-- Page custom styles-->
        <apex:stylesheet value="{!URLFOR($Resource.StripeStyles, 'StripePaymentCustomStyles.css')}"/>
        <!-- Additional custom styles-->
        <style type="text/css">
            body {
                background: #314a5b;
            }
        </style>
    </head> 

    <body>
        <header class="container d-flex justify-content-center mt-5">
            <!-- iHasco Logo  -->
            <apex:image url="{!URLFOR($Resource.StripeStyles, 'iHasco-logo.svg')}" height="70" alt="iHASCO"/>
        </header>
        <main class="container mt-4 mb-5">
            <div class="bg-white p-5 shadow-sm">
                <h1 class="title d-block py-4 mb-0 text-center">Payment</h1>
                <p class="text-center mt-5 lead">You have requested that an order be placed in the name <strong>{!customerBillingWrap.customerName}</strong>
                    on behalf of <strong>{!customerBillingWrap.companyName}</strong> as detailed below. Please review the
                    order and enter your card details to complete&nbsp;payment.</p>
                <form accept-charset="utf-8" id="payment-form" autocomplete="off">
                    <div style="display:none">
                        <input type="hidden" name="autocomplete" value="off" />
                    </div>
                    <fieldset class="mt-5">
                        <legend class="text-center pb-3">Review Your Order</legend>
                        <table class="table table-bordered mt-3">
                            <thead>
                                <tr>
                                    <th>Description</th>
                                    <th>Cost</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="w-100">{!customerBillingWrap.description}</td>
                                    <td class="text-nowrap">£{!customerBillingWrap.amount}</td>
                                </tr>
                                <tr>
                                    <td class="w-100"><strong>VAT @ 20%</strong></td>
                                    <td class="text-nowrap">£{!customerBillingWrap.vatAmount}</td>
                                </tr>
                                <tr class="total">
                                    <td class="w-100"><strong>Total payable now inc VAT</strong></td>
                                    <td class="text-nowrap"><strong>£{!customerBillingWrap.totalAmount}</strong></td>
                                </tr>
                            </tbody>
                        </table>
                    </fieldset>
                    <fieldset>
                        <legend class="text-center pb-3 mt-5">Enter Your Card Details</legend>
                        <div class="form-row">
                            <div class="form-group col-lg-6">
                                <label for="cardholder-name"><strong>Cardholder name</strong> <span
                                        class="required">*</span></label>
                                <input id="cardholder-name" name="cardholder-name" class="form-control" minlength="4" placeholder="Your full name" value="" required="true" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="card-postcode"><strong>Registered postcode</strong> <span
                                        class="required">*</span></label>
                                <input id="card-postcode" name="card-postcode" class="form-control" minlength="6" placeholder="Your postal code" value="" required="true" />
                            </div>
                        </div>
                        <div class="form-group mt-3">
                            <label for="card-number"><strong>Card Number</strong> <span class="required">*</span></label>
                            <div id="card-number" class="form-control"></div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-lg-6">
                                <label for="card-expiry"><strong>Card Expiry</strong> <span
                                        class="required">*</span></label>
                                <div id="card-expiry" class="form-control"></div>
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="card-cvc"><strong>Security Code</strong> <small>(Usually the 3 digits on the back of your card)</small> <span class="required">*</span></label>
                                <div id="card-cvc" class="form-control"></div>
                            </div>
                        </div>
                        <div id="card-errors" class="text-danger" role="alert"></div>
                        <input type="hidden" name="gateway_reference" id="gateway_reference" />
                        <button id="card-button" class="btn-pink btn-lg btn-block mt-3" type="button">
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: none;"></span>
                            <span class="toggle-button">
                                <span class="bi bi-lock-fill"></span>
                                Pay £<span class="total_price_inc_vat">{!customerBillingWrap.totalAmount}</span> Now
                            </span>
                        </button>
                    </fieldset>
                </form>
                <script src="https://js.stripe.com/v3/"></script>
                <script type="text/javascript">
                    const stripePublishableKey = '{!stripeKey.PublishableKey__c}';
                    const stripe = Stripe(stripePublishableKey);
                    const totalAmountToPay = '{!customerBillingWrap.totalAmount}';
                    const objId = '{!contractOrderId}';

                    const elements = stripe.elements();
                    let style = {
                        base: {
                            fontSize: '16px',
                            color: "#32325d"
                        }
                    };
                    let elementClasses = {
                        focus: 'focus'
                    };

                    let cardNumber = elements.create('cardNumber', {
                        style: style,
                        placeholder: '•••• •••• •••• ••••',
                        classes: elementClasses
                    });
                    cardNumber.mount('#card-number');

                    let cardExpiry = elements.create('cardExpiry', {
                        style: style,
                        classes: elementClasses
                    });
                    cardExpiry.mount('#card-expiry');

                    let cardCvc = elements.create('cardCvc', {
                        style: style,
                        placeholder: '•••',
                        classes: elementClasses
                    });
                    cardCvc.mount('#card-cvc');

                    let paymentForm = document.getElementById('payment-form');
                    let paymentProcessing = false;
                    let cardholderName = document.getElementById('cardholder-name');
                    let cardPostcode = document.getElementById('card-postcode');
                    let cardButton = document.getElementById('card-button');
                    let cardErrors = document.getElementById('card-errors');
                    let stopLoading = function () {
                        document.querySelector('#card-button > .toggle-button').style.display = 'inline-block';
                        document.querySelector('#card-button > .spinner-border').style.display = 'none';
                    }

                    let validateLocalControls = function () {
                        cardErrors.textContent = "";
                        if (!cardholderName.validity.valid) {
                            displayValidationError("Please enter the cardholder's name");
                            cardholderName.focus();
                            return false;
                        }
                        if (!cardPostcode.validity.valid) {
                            displayValidationError("Please enter the registered postcode");
                            cardPostcode.focus();
                            return false;
                        }
                        return true;
                    }

                    let displayValidationError = function (msg) {
                        cardErrors.textContent = msg;
                        paymentProcessing = false;
                        cardButton.disabled = false;
                        stopLoading();
                    }

                    cardButton.addEventListener('click', function (event) {
                        event.preventDefault();

                        if (paymentProcessing) {
                            return;
                        }
                        if (!validateLocalControls()) {
                            return;
                        }
                        document.querySelector('#card-button > .spinner-border').style.display = 'inline-block';
                        generateClientSecret();
                    });

                    function generateClientSecret() {
                        Visualforce.remoting.timeout = 120000;
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.StripeCalloutService.createPaymentIntent}',
                            objId, cardholderName.value,
                            function (result, event) {
                                if (event.status) {
                                    let payIntRes = JSON.parse(JSON.stringify(result));
                                    if (payIntRes && payIntRes.id && payIntRes.client_secret) {
                                        confirmCardPayment(payIntRes.client_secret);
                                    }
                                } else if (event.type === 'exception') {
                                    displayValidationError(event.message);
                                    console.error('::Error in creating payment Intent' + event.message);
                                } else {
                                    displayValidationError(event.message);
                                    console.error('::Error in creating payment Intent' + event.message);
                                }
                            },
                            { escape: true }
                        );
                    }

                    let confirmCardPayment = function(clientSecret) {
                        if(!clientSecret) {
                            return;
                        }
                        paymentProcessing = true;
                        cardButton.disabled = true;
                        stripe.confirmCardPayment(clientSecret, {
                            payment_method: {
                                card: cardNumber,
                                billing_details: {
                                    name: cardholderName.value,
                                    address: {
                                        city: '{!customerBillingWrap.city}',
                                        country: "{!customerBillingWrap.country}",
                                        line1: '{!customerBillingWrap.line1}',
                                        //postal_code: '98140',
                                        postal_code: cardPostcode.value,
                                        state: '{!customerBillingWrap.state}',
                                    },
                                    email: '{!customerBillingWrap.email}',
                                    phone: '{!customerBillingWrap.phone}',
                                },
                            }
                        }
                        ).then(function (result) {
                            /* document.querySelector('#card-button > .toggle-button').style.display = 'none';
                            document.querySelector('#card-button > .spinner-border').style.display = 'inline-block'; */
                            if (result.error) {
                                console.log('::Error in confirmCardPayment' + result.paymentIntent);
                                processPaymentConfirmation('undefined', false);
                                displayValidationError(result.error.message);
                            } else {
                                document.getElementById('card-button').style.display = 'none';
                                document.getElementById('gateway_reference').value = result.paymentIntent.id;
                                processPaymentConfirmation(result.paymentIntent, true);
                                let link = '/ihasco/StripePaymentConfirmation';
                                // redirect to success page
                                window.location = link;
                            } 
                        });
                    }

                    function processPaymentConfirmation(paymentIntent, isSuccess) {
                        let paymentIntentJSON = JSON.stringify(paymentIntent);
                        console.log('::paymentIntentJSON: '+paymentIntentJSON);
                        Visualforce.remoting.timeout = 120000;
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.StripeCalloutService.processPaymentConfirmation}',
                            paymentIntentJSON, objId, isSuccess,
                            function (result, event) {
                                if (event.status) {
                                    let resp = JSON.parse(JSON.stringify(result));
                                } else if (event.type === 'exception') {
                                    console.error('::Error in creating payment Intent' + event.message);
                                } else {
                                    console.error('::Error in creating payment Intent' + event.message);
                                }
                            },
                            { escape: true }
                        );
                    }
                </script>
            </div>
        </main>
    </body>
</apex:page>